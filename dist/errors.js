"use strict";

/**
 * Copyright 2014 Shape Security, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var ErrorMessages = exports.ErrorMessages = {
  UNEXPECTED_TOKEN: "Unexpected token {0}",
  UNEXPECTED_ILLEGAL_TOKEN: "Unexpected token ILLEGAL",
  UNEXPECTED_NUMBER: "Unexpected number",
  UNEXPECTED_STRING: "Unexpected string",
  UNEXPECTED_IDENTIFIER: "Unexpected identifier",
  UNEXPECTED_RESERVED_WORD: "Unexpected reserved word",
  UNEXPECTED_EOS: "Unexpected end of input",
  UNEXPECTED_LT: "Unexpected line terminator",
  NEWLINE_AFTER_THROW: "Illegal newline after throw",
  INVALID_REGULAR_EXPRESSION: "Invalid regular expression",
  UNTERMINATED_REG_EXP: "Invalid regular expression: missing /",
  INVALID_LHS_IN_ASSIGNMENT: "Invalid left-hand side in assignment",
  INVALID_LHS_IN_FOR_IN: "Invalid left-hand side in for-in",
  INVALID_PROPERTY_NAME: "Property name in object literal must be identifier, string literal or number literal",
  MULTIPLE_DEFAULTS_IN_SWITCH: "More than one default clause in switch statement",
  NO_CATCH_OR_FINALLY: "Missing catch or finally after try",
  UNKNOWN_LABEL: "Undefined label '{0}'",
  LABEL_REDECLARATION: "Label '{0}' has already been declared",
  ILLEGAL_CONTINUE: "Illegal continue statement",
  ILLEGAL_BREAK: "Illegal break statement",
  ILLEGAL_RETURN: "Illegal return statement",
  STRICT_MODE_WITH: "Strict mode code may not include a with statement",
  STRICT_CATCH_VARIABLE: "Catch variable may not be eval or arguments in strict mode",
  STRICT_VAR_NAME: "Variable name may not be eval or arguments in strict mode",
  STRICT_PARAM_NAME: "Parameter name eval or arguments is not allowed in strict mode",
  STRICT_PARAM_DUPE: "Strict mode function may not have duplicate parameter names",
  STRICT_FUNCTION_NAME: "Function name may not be eval or arguments in strict mode",
  STRICT_OCTAL_LITERAL: "Octal literals are not allowed in strict mode.",
  STRICT_DELETE: "Delete of an unqualified identifier in strict mode.",
  DUPLICATE_PROTO_PROPERTY: "Duplicate __proto__ property in object literal not allowed",
  DUPLICATE_BINDING: "Duplicate binding '{0}'",
  ACCESSOR_DATA_PROPERTY: "Object literal may not have data and accessor property with the same name",
  ACCESSOR_GET_SET: "Object literal may not have multiple get/set accessors with the same name",
  STRICT_LHS_ASSIGNMENT: "Assignment to eval or arguments is not allowed in strict mode",
  STRICT_LHS_POSTFIX: "Postfix increment/decrement may not have eval or arguments operand in strict mode",
  STRICT_LHS_PREFIX: "Prefix increment/decrement may not have eval or arguments operand in strict mode",
  STRICT_RESERVED_WORD: "Use of future reserved word in strict mode",
  ILLEGAL_ARROW_FUNCTION_PARAMS: "Illegal arrow function parameter list"
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9lcnJvcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0JPLElBQU0sYUFBYSxXQUFiLGFBQWEsR0FBRztBQUMzQixrQkFBZ0IsRUFBRSxzQkFBc0I7QUFDeEMsMEJBQXdCLEVBQUUsMEJBQTBCO0FBQ3BELG1CQUFpQixFQUFFLG1CQUFtQjtBQUN0QyxtQkFBaUIsRUFBRSxtQkFBbUI7QUFDdEMsdUJBQXFCLEVBQUUsdUJBQXVCO0FBQzlDLDBCQUF3QixFQUFFLDBCQUEwQjtBQUNwRCxnQkFBYyxFQUFFLHlCQUF5QjtBQUN6QyxlQUFhLEVBQUUsNEJBQTRCO0FBQzNDLHFCQUFtQixFQUFFLDZCQUE2QjtBQUNsRCw0QkFBMEIsRUFBRSw0QkFBNEI7QUFDeEQsc0JBQW9CLEVBQUUsdUNBQXVDO0FBQzdELDJCQUF5QixFQUFFLHNDQUFzQztBQUNqRSx1QkFBcUIsRUFBRSxrQ0FBa0M7QUFDekQsdUJBQXFCLEVBQUUsc0ZBQXNGO0FBQzdHLDZCQUEyQixFQUFFLGtEQUFrRDtBQUMvRSxxQkFBbUIsRUFBRSxvQ0FBb0M7QUFDekQsZUFBYSxFQUFFLHVCQUF1QjtBQUN0QyxxQkFBbUIsRUFBRSx1Q0FBdUM7QUFDNUQsa0JBQWdCLEVBQUUsNEJBQTRCO0FBQzlDLGVBQWEsRUFBRSx5QkFBeUI7QUFDeEMsZ0JBQWMsRUFBRSwwQkFBMEI7QUFDMUMsa0JBQWdCLEVBQUUsbURBQW1EO0FBQ3JFLHVCQUFxQixFQUFFLDREQUE0RDtBQUNuRixpQkFBZSxFQUFFLDJEQUEyRDtBQUM1RSxtQkFBaUIsRUFBRSxnRUFBZ0U7QUFDbkYsbUJBQWlCLEVBQUUsNkRBQTZEO0FBQ2hGLHNCQUFvQixFQUFFLDJEQUEyRDtBQUNqRixzQkFBb0IsRUFBRSxnREFBZ0Q7QUFDdEUsZUFBYSxFQUFFLHFEQUFxRDtBQUNwRSwwQkFBd0IsRUFBRSw0REFBNEQ7QUFDdEYsbUJBQWlCLEVBQUUseUJBQXlCO0FBQzVDLHdCQUFzQixFQUFFLDJFQUEyRTtBQUNuRyxrQkFBZ0IsRUFBRSwyRUFBMkU7QUFDN0YsdUJBQXFCLEVBQUUsK0RBQStEO0FBQ3RGLG9CQUFrQixFQUFFLG1GQUFtRjtBQUN2RyxtQkFBaUIsRUFBRSxrRkFBa0Y7QUFDckcsc0JBQW9CLEVBQUUsNENBQTRDO0FBQ2xFLCtCQUE2QixFQUFFLHVDQUF1QztDQUN2RSxDQUFDIiwiZmlsZSI6InNyYy9lcnJvcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAyMDE0IFNoYXBlIFNlY3VyaXR5LCBJbmMuXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKVxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuZXhwb3J0IGNvbnN0IEVycm9yTWVzc2FnZXMgPSB7XG4gIFVORVhQRUNURURfVE9LRU46IFwiVW5leHBlY3RlZCB0b2tlbiB7MH1cIixcbiAgVU5FWFBFQ1RFRF9JTExFR0FMX1RPS0VOOiBcIlVuZXhwZWN0ZWQgdG9rZW4gSUxMRUdBTFwiLFxuICBVTkVYUEVDVEVEX05VTUJFUjogXCJVbmV4cGVjdGVkIG51bWJlclwiLFxuICBVTkVYUEVDVEVEX1NUUklORzogXCJVbmV4cGVjdGVkIHN0cmluZ1wiLFxuICBVTkVYUEVDVEVEX0lERU5USUZJRVI6IFwiVW5leHBlY3RlZCBpZGVudGlmaWVyXCIsXG4gIFVORVhQRUNURURfUkVTRVJWRURfV09SRDogXCJVbmV4cGVjdGVkIHJlc2VydmVkIHdvcmRcIixcbiAgVU5FWFBFQ1RFRF9FT1M6IFwiVW5leHBlY3RlZCBlbmQgb2YgaW5wdXRcIixcbiAgVU5FWFBFQ1RFRF9MVDogXCJVbmV4cGVjdGVkIGxpbmUgdGVybWluYXRvclwiLFxuICBORVdMSU5FX0FGVEVSX1RIUk9XOiBcIklsbGVnYWwgbmV3bGluZSBhZnRlciB0aHJvd1wiLFxuICBJTlZBTElEX1JFR1VMQVJfRVhQUkVTU0lPTjogXCJJbnZhbGlkIHJlZ3VsYXIgZXhwcmVzc2lvblwiLFxuICBVTlRFUk1JTkFURURfUkVHX0VYUDogXCJJbnZhbGlkIHJlZ3VsYXIgZXhwcmVzc2lvbjogbWlzc2luZyAvXCIsXG4gIElOVkFMSURfTEhTX0lOX0FTU0lHTk1FTlQ6IFwiSW52YWxpZCBsZWZ0LWhhbmQgc2lkZSBpbiBhc3NpZ25tZW50XCIsXG4gIElOVkFMSURfTEhTX0lOX0ZPUl9JTjogXCJJbnZhbGlkIGxlZnQtaGFuZCBzaWRlIGluIGZvci1pblwiLFxuICBJTlZBTElEX1BST1BFUlRZX05BTUU6IFwiUHJvcGVydHkgbmFtZSBpbiBvYmplY3QgbGl0ZXJhbCBtdXN0IGJlIGlkZW50aWZpZXIsIHN0cmluZyBsaXRlcmFsIG9yIG51bWJlciBsaXRlcmFsXCIsXG4gIE1VTFRJUExFX0RFRkFVTFRTX0lOX1NXSVRDSDogXCJNb3JlIHRoYW4gb25lIGRlZmF1bHQgY2xhdXNlIGluIHN3aXRjaCBzdGF0ZW1lbnRcIixcbiAgTk9fQ0FUQ0hfT1JfRklOQUxMWTogXCJNaXNzaW5nIGNhdGNoIG9yIGZpbmFsbHkgYWZ0ZXIgdHJ5XCIsXG4gIFVOS05PV05fTEFCRUw6IFwiVW5kZWZpbmVkIGxhYmVsICd7MH0nXCIsXG4gIExBQkVMX1JFREVDTEFSQVRJT046IFwiTGFiZWwgJ3swfScgaGFzIGFscmVhZHkgYmVlbiBkZWNsYXJlZFwiLFxuICBJTExFR0FMX0NPTlRJTlVFOiBcIklsbGVnYWwgY29udGludWUgc3RhdGVtZW50XCIsXG4gIElMTEVHQUxfQlJFQUs6IFwiSWxsZWdhbCBicmVhayBzdGF0ZW1lbnRcIixcbiAgSUxMRUdBTF9SRVRVUk46IFwiSWxsZWdhbCByZXR1cm4gc3RhdGVtZW50XCIsXG4gIFNUUklDVF9NT0RFX1dJVEg6IFwiU3RyaWN0IG1vZGUgY29kZSBtYXkgbm90IGluY2x1ZGUgYSB3aXRoIHN0YXRlbWVudFwiLFxuICBTVFJJQ1RfQ0FUQ0hfVkFSSUFCTEU6IFwiQ2F0Y2ggdmFyaWFibGUgbWF5IG5vdCBiZSBldmFsIG9yIGFyZ3VtZW50cyBpbiBzdHJpY3QgbW9kZVwiLFxuICBTVFJJQ1RfVkFSX05BTUU6IFwiVmFyaWFibGUgbmFtZSBtYXkgbm90IGJlIGV2YWwgb3IgYXJndW1lbnRzIGluIHN0cmljdCBtb2RlXCIsXG4gIFNUUklDVF9QQVJBTV9OQU1FOiBcIlBhcmFtZXRlciBuYW1lIGV2YWwgb3IgYXJndW1lbnRzIGlzIG5vdCBhbGxvd2VkIGluIHN0cmljdCBtb2RlXCIsXG4gIFNUUklDVF9QQVJBTV9EVVBFOiBcIlN0cmljdCBtb2RlIGZ1bmN0aW9uIG1heSBub3QgaGF2ZSBkdXBsaWNhdGUgcGFyYW1ldGVyIG5hbWVzXCIsXG4gIFNUUklDVF9GVU5DVElPTl9OQU1FOiBcIkZ1bmN0aW9uIG5hbWUgbWF5IG5vdCBiZSBldmFsIG9yIGFyZ3VtZW50cyBpbiBzdHJpY3QgbW9kZVwiLFxuICBTVFJJQ1RfT0NUQUxfTElURVJBTDogXCJPY3RhbCBsaXRlcmFscyBhcmUgbm90IGFsbG93ZWQgaW4gc3RyaWN0IG1vZGUuXCIsXG4gIFNUUklDVF9ERUxFVEU6IFwiRGVsZXRlIG9mIGFuIHVucXVhbGlmaWVkIGlkZW50aWZpZXIgaW4gc3RyaWN0IG1vZGUuXCIsXG4gIERVUExJQ0FURV9QUk9UT19QUk9QRVJUWTogXCJEdXBsaWNhdGUgX19wcm90b19fIHByb3BlcnR5IGluIG9iamVjdCBsaXRlcmFsIG5vdCBhbGxvd2VkXCIsXG4gIERVUExJQ0FURV9CSU5ESU5HOiBcIkR1cGxpY2F0ZSBiaW5kaW5nICd7MH0nXCIsXG4gIEFDQ0VTU09SX0RBVEFfUFJPUEVSVFk6IFwiT2JqZWN0IGxpdGVyYWwgbWF5IG5vdCBoYXZlIGRhdGEgYW5kIGFjY2Vzc29yIHByb3BlcnR5IHdpdGggdGhlIHNhbWUgbmFtZVwiLFxuICBBQ0NFU1NPUl9HRVRfU0VUOiBcIk9iamVjdCBsaXRlcmFsIG1heSBub3QgaGF2ZSBtdWx0aXBsZSBnZXQvc2V0IGFjY2Vzc29ycyB3aXRoIHRoZSBzYW1lIG5hbWVcIixcbiAgU1RSSUNUX0xIU19BU1NJR05NRU5UOiBcIkFzc2lnbm1lbnQgdG8gZXZhbCBvciBhcmd1bWVudHMgaXMgbm90IGFsbG93ZWQgaW4gc3RyaWN0IG1vZGVcIixcbiAgU1RSSUNUX0xIU19QT1NURklYOiBcIlBvc3RmaXggaW5jcmVtZW50L2RlY3JlbWVudCBtYXkgbm90IGhhdmUgZXZhbCBvciBhcmd1bWVudHMgb3BlcmFuZCBpbiBzdHJpY3QgbW9kZVwiLFxuICBTVFJJQ1RfTEhTX1BSRUZJWDogXCJQcmVmaXggaW5jcmVtZW50L2RlY3JlbWVudCBtYXkgbm90IGhhdmUgZXZhbCBvciBhcmd1bWVudHMgb3BlcmFuZCBpbiBzdHJpY3QgbW9kZVwiLFxuICBTVFJJQ1RfUkVTRVJWRURfV09SRDogXCJVc2Ugb2YgZnV0dXJlIHJlc2VydmVkIHdvcmQgaW4gc3RyaWN0IG1vZGVcIixcbiAgSUxMRUdBTF9BUlJPV19GVU5DVElPTl9QQVJBTVM6IFwiSWxsZWdhbCBhcnJvdyBmdW5jdGlvbiBwYXJhbWV0ZXIgbGlzdFwiXG59O1xuIl19